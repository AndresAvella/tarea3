import numpy as np
import matplotlib.pyplot as plt
from scipy import fftpack
from scipy.interpolate import interp1d
from scipy.fftpack import fft, ifft,fftfreq

#cargo los datos de la señal y los incompletos
archivo = np.loadtxt('signal.dat', delimiter = ',')
archivo1 = np.loadtxt('incompletos.dat', delimiter = ',')

#cargo los archivos y ploteo cada uno de estos
plt.plot(archivo)

plt.title(" Datos señal")
plt.savefig('AvellaAndres_signal.pdf')
plt.close()

plt.plot(archivo1)
plt.title("Datos incompleto")
plt.savefig('AvellaAndres_incompleto.pdf')
plt.close()







#genero un arrelgo para graficar y almaceno las columnas en variables

x = np.linspace(0, 117, num=117, endpoint=True)
y = archivo1[:,0]

x1 = np.linspace(0, 117, num=117, endpoint=True)
y1 = archivo1[:,1]


#transformada de fourier
def fu(arry):
    
    e = np.exp((-2*np.pi*1j)/len(arry))
    es = np.asarray([np.power(e,k) for k in range(len(arry))])
    f = np.zeros(len(arry), dtype = complex)
    for j in range(len(arry)):
        f[j] = np.dot(np.power(es,j),arry)
    return f

t=np.linspace(0,120,512)
dt=t[1]-t[0]

w = fftfreq(512, dt)
#Magnitud de la transformada de fourier de los datos
RF1=abs(fu(archivo[:,0]))
RF2= abs(fu(archivo[:,1]))
#grafica primera columna con FT
plt.plot(w , RF1)
plt.title("Transformada de fourier de la columna 1 de la señal")
plt.savefig('AvellaAndres_TF_columna1.pdf')
plt.close()

plt.plot(w , RF2)
plt.title("Transformada de fourier de la columna 2 de la señal")
plt.savefig('AvellaAndres_TF_columna2.pdf')
plt.close()

#grafica de señal con FT
plt.title("Transformada de fourier de la señal")
plt.plot(w , RF1)
plt.plot(w, RF2)
plt.savefig('AvellaAndres_TF.pdf')
plt.close()

#filtrado de frecuencias
plt.title("Transformada de fourier para frecuencias mas importantes de la señal")
plt.plot(w , RF1)
plt.plot(w , RF2)
plt.xlim(-0.5,0.5)
plt.savefig('AvellaAndres_TF_frecuencias_importantes.pdf')
plt.close()

#se requiere tener la frecuencia  mas importante

fre=[]

for i in range (512):
    if(RF2[i]>199):
        fre.append(RF2[i])
print("")
print("Las frecuencias dominantes son ",fre)
print("")
#filtro la señal y hago la inversa
frecorte2=[]
frecorte1=[]
for i in range (512):
    if(RF2[i]<1000):
        frecorte2.append(RF2[i])
    if(RF1[i]<1000):
        frecorte1.append(RF1[i])

inversa1=np.real(ifft(frecorte2))
inversa2=np.real(ifft(frecorte1))
plt.title("Transformada inversa de fourier luego del filtro")
plt.plot(inversa2,inversa1)
plt.savefig('AvellaAndres_filtrada.pdf')
plt.close()

RF111=[]
RF222=[]
RFaux1 = abs(fu(archivo1[:,0]))
RFaux2= abs(fu(archivo1[:,1]))
for i in range (116):
    RF111.append(RFaux1)
    RF222.append(RFaux2)
t1=np.linspace(0,120,512)
dt1=t1[1]-t[0]
w1= fftfreq(116, dt1)
plt.title("Transformada de fourier de los datos incompletos")
plt.plot(w1, RF111)
plt.plot(w1,RF222)
plt.savefig('AvellaAndres_incompleto.pdf')
plt.close()
print("")
print("al quitar datos de una funcion original la funcion deja de continuidad , de modo que a la hora de realizar la transformada de fourier se pierde informacion para pasar al espacion de frecuencias. Como s eve en la imagen de transformada de fourer de datos incompletos, no se genera una funcion continua sino un conjunto de lineas separadas. Ademas , es importante recordar que la falta de datos genera perdida de informacion, hasta el punto de evitar la lecutra en el espacio de frecunecias ")
print("")

# interpolacion
#realizo el proceso de interpolacion de la señal incompleta en primer orden , segundo y tercero

f2 = interp1d(x, y, kind='cubic')
f3= interp1d(x, y, kind='quadratic')
#proceso de interpolacion para la segunda columna
f22 = interp1d(x1, y1, kind='cubic')
f33= interp1d(x1, y1, kind='quadratic')
xnew = np.linspace(0, 117, num=512, endpoint=True)
#grafia con la interpolacion cubica y los datos originales
plt.title("Interpolacion cubica de los datos incompletos")
plt.plot(xnew,f2(xnew))
plt.plot(xnew,f22(xnew))
plt.plot(xnew,archivo[:,0])
plt.plot(xnew,archivo[:,1])
plt.savefig('AvellaAndres_iter_cubica.pdf')
plt.close()


#grafica con la interpolacion cuadrada y los datos originales
plt.title("Interpolacion cuadratica de los datos incompletos")
plt.plot(xnew,f3(xnew))
plt.plot(xnew,f33(xnew))
plt.plot(xnew,archivo[:,0])
plt.plot(xnew,archivo[:,1])
plt.savefig('AvellaAndres_inter_cuadratica.pdf')
plt.close()
#
RF3 = abs(fu(f3(xnew)))
RF4 = abs(fu(f33(xnew)))
RF5 = abs(fu(f2(xnew)))
RF6 = abs(fu(f22(xnew)))
#grafica de transformada de fourier
plt.title("Transformada de fourier de interpolacion cuadratica de los datos incompletos")
plt.plot(w,RF3)
plt.plot(w,RF4)
plt.savefig('AvellaAndres_TF_inter_cuadratica.pdf')
plt.close()


plt.title("Transformada de fourier de interpolacion cuadratica de los datos incompletos")
plt.plot(w,RF3)
plt.plot(w,RF4)
plt.xlim(-0.5,0.5)
plt.savefig('AvellaAndres_TF_inter_cuadratica-frecu-importantes.pdf')
plt.close()

#grafica de transformada de fourier
plt.title("transformada de fourier de interpolacion cubica de los datos incompletos")
plt.plot(w,RF5)
plt.plot(w,RF6)
plt.savefig('AvellaAndres_TF_inter_cubica.pdf')
plt.close()



plt.title("transformada de fourier de interpolacion cubica de los datos incompletos")
plt.plot(w,RF5)
plt.plot(w,RF6)
plt.xlim(-0.5,0.5)
plt.savefig('AvellaAndres_TF_inter_cubica_frecu_importantes.pdf')
plt.close()


#plot triple de las transformadas de fourier
fig, (ax1, ax2,ax3) = plt.subplots(nrows=1, ncols=3)
plt.title("Transformada de fourier interpolacion cuadratica, cubica y datos originales")
ax1.plot(w, RF3, marker='x',label="cuadratica")
ax1.plot(w ,RF4, marker='x', label="cuadratica")
ax1.legend(loc="upper left")
ax2.plot(w,RF5, marker='*',label="cubica")
ax2.plot(w,RF6, marker='*',label="cubica")
ax2.legend(loc="upper left")
ax3.plot(w , RF1,label="original")
ax3.plot(w , RF2,label="original")
ax3.legend(loc="upper left")
plt.savefig('AvellaAndres_TF_interpola.pdf')
plt.close()


#aca tengo que comentar que encuentro de difertente en las transformadas de fourier
print("")
print("como se ve al realizar los dos procesos de interpolacion cuadratica y cubica,se logro pasar al espacio de frecuencias por medio de la transformada de fourier, como se ve la transformada de fourier de las interpolaciones tiene unos picos de freucencia diferentes a la de la señal original, esto se debe al proceos de ajuste de los datos por medio de la interpolacion. Ya que este se encarga de rellenar los datos de la serie de datos incompletos por medio de un ajuste cuadratico y cubico, lo que permite hacer la trasnformada")
print("")
#proceso de filtrado con frecuencia 1000

ft1=[]
ft2=[]
ft3=[]
ft4=[]
ft11=[]
ft22=[]
ft33=[]
ft44=[]

for i in range(512):
    if(RF3[i]<1000):
        ft1.append(RF3[i])
    if(RF4[i]<1000):
        ft2.append(RF4[i])
    if(RF5[i]<1000):
        ft3.append(RF5[i])
    if(RF6[i]<1000):
        ft4.append(RF6[i])


#proceso de filtrado con frecuencia 500


for i in range(512):
    if(RF3[i]<500):
        ft11.append(RF3[i])
    if(RF4[i]<500):
        ft22.append(RF4[i])
    if(RF5[i]<500):
        ft33.append(RF5[i])
    if(RF6[i]<500):
        ft44.append(RF6[i])

