import numpy as np
import matplotlib.pyplot as plt
from scipy import fftpack
from scipy.interpolate import interp1d
from scipy.fftpack import fft, ifft,fftfreq

#cargo los datos de la señal y los incompletos
archivo = np.loadtxt('signal.dat', delimiter = ',')
archivo1 = np.loadtxt('incompletos.dat', delimiter = ',')

#cargo los archivos y ploteo cada uno de estos
plt.plot(archivo)

plt.title(" Datos señal")
plt.savefig('AvellaAndres_signal.pdf')
plt.close()

plt.plot(archivo1)
plt.title("Datos incompleto")
plt.savefig('AvellaAndres_incompleto.pdf')
plt.close()







#genero un arrelgo para graficar y almaceno las columnas en variables

x = np.linspace(0, 117, num=117, endpoint=True)
y = archivo1[:,0]

x1 = np.linspace(0, 117, num=117, endpoint=True)
y1 = archivo1[:,1]


#transformada de fourier
def fu(arry):
    
    e = np.exp((-2*np.pi*1j)/len(arry))
    es = np.asarray([np.power(e,k) for k in range(len(arry))])
    f = np.zeros(len(arry), dtype = complex)
    for j in range(len(arry)):
        f[j] = np.dot(np.power(es,j),arry)
    return f

t=np.linspace(0,120,512)
dt=t[1]-t[0]

w = fftfreq(512, dt)
#Magnitud de la transformada de fourier de los datos
RF1=abs(fu(archivo[:,0]))
RF2= abs(fu(archivo[:,1]))
#grafica primera columna con FT
plt.plot(w , RF1)
plt.title("Transformada de fourier de la columna 1 de la señal")
plt.savefig('AvellaAndres_TF_columna1.pdf')
plt.close()

plt.plot(w , RF2)
plt.title("Transformada de fourier de la columna 2 de la señal")
plt.savefig('AvellaAndres_TF_columna2.pdf')
plt.close()

#grafica de señal con FT
plt.title("Transformada de fourier de la señal")
plt.plot(w , RF1)
plt.plot(w, RF2)
plt.savefig('AvellaAndres_TF.pdf')
plt.close()

#filtrado de frecuencias
plt.title("Transformada de fourier para frecuencias mas importantes de la señal")
plt.plot(w , RF1)
plt.plot(w , RF2)
plt.xlim(-0.5,0.5)
plt.savefig('AvellaAndres_TF_frecuencias_importantes.pdf')
plt.close()

#se requiere tener la frecuencia  mas importante

fre=[]

for i in range (512):
    if(RF2[i]>199):
        fre.append(RF2[i])
print("")
print("Las frecuencias dominantes son ",fre)
print("")
#filtro la señal y hago la inversa
frecorte2=[]
frecorte1=[]
for i in range (512):
    if(RF2[i]<1000):
        frecorte2.append(RF2[i])
    if(RF1[i]<1000):
        frecorte1.append(RF1[i])

inversa1=np.real(ifft(frecorte2))
inversa2=np.real(ifft(frecorte1))
plt.title("Transformada inversa de fourier luego del filtro")
plt.plot(inversa2,inversa1)
plt.savefig('AvellaAndres_filtrada.pdf')
plt.close()

RF111=[]
RF222=[]
RFaux1 = abs(fu(archivo1[:,0]))
RFaux2= abs(fu(archivo1[:,1]))
for i in range (116):
    RF111.append(RFaux1)
    RF222.append(RFaux2)
t1=np.linspace(0,120,512)
dt1=t1[1]-t[0]
w1= fftfreq(116, dt1)
plt.title("Transformada de fourier de los datos incompletos")
plt.plot(w1, RF111)
plt.plot(w1,RF222)
plt.savefig('AvellaAndres_incompleto.pdf')
plt.close()
print("")
print("al quitar datos de una funcion original la funcion deja de continuidad , de modo que a la hora de realizar la transformada de fourier se pierde informacion para pasar al espacion de frecuencias. Como s eve en la imagen de transformada de fourer de datos incompletos, no se genera una funcion continua sino un conjunto de lineas separadas. Ademas , es importante recordar que la falta de datos genera perdida de informacion, hasta el punto de evitar la lecutra en el espacio de frecunecias ")
print("")



